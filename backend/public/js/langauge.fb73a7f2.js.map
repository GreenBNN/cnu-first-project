{"version":3,"file":"js/langauge.fb73a7f2.js","mappings":"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","sources":["webpack://vueproject/./src/views/1_language/CView.vue","webpack://vueproject/./src/views/1_language/CView.vue?f55b","webpack://vueproject/./src/views/1_language/CView2.vue","webpack://vueproject/./src/views/1_language/CView2.vue?83ae","webpack://vueproject/./src/views/LoginView.vue","webpack://vueproject/./src/views/LoginView.vue?5755"],"sourcesContent":["<template>\r\n  <div>\r\n    <h3>코딩연습이다!!!!!</h3>\r\n  </div>\r\n  <div :style=\"divStyle\" :key=\"index\" v-for=\"(word, index) in wordArr\">\r\n    <span\r\n      :key=\"index2\"\r\n      v-for=\"(char, index2) in word\"\r\n      :style=\"currentWordType[index][index2]\"\r\n    >\r\n      {{ char }}\r\n    </span>\r\n\r\n    <p>{{ index }}</p>\r\n    <input\r\n      type=\"text\"\r\n      v-focus\r\n      @keydown.enter=\"nextUpdate(index)\"\r\n      @keydown.space=\"nextUpdate(index)\"\r\n      v-if=\"canType[index]\"\r\n      v-model=\"currentInput\"\r\n    />\r\n  </div>\r\n  <div>\r\n    <br /><br /><br />\r\n    <br /><br /><br />\r\n  </div>\r\n  <h3>{{ input }}</h3>\r\n  <h3>{{ wordArr }}</h3>\r\n  <h3>{{ canType }}</h3>\r\n</template>\r\n\r\n<script>\r\nconst focus = {\r\n  mounted: (el) => el.focus()\r\n}\r\n\r\nexport default {\r\n  name: 'CustomDirective',\r\n  directives: {\r\n    focus\r\n  },\r\n  components: {},\r\n  data() {\r\n    return {\r\n      wordData: [\r\n        // 단어 데이터\r\n        'apple',\r\n        'banana',\r\n        'water',\r\n        'circle',\r\n        'chicken',\r\n        'lab',\r\n        'mouse',\r\n        'print',\r\n        'scan'\r\n      ],\r\n      wordArr: [], // 타이핑 할 단어 배열\r\n      wordLen: [],\r\n      canType: [true, false, false, false, false], // 타이핑 단어 순서 / true 가 타이핑 해야하는 단어\r\n      currentWord: [], // 타이핑해야하는 단어의 char 들\r\n      currentWordIndex: 0, // 타이핑 해야하는 단어의 순서\r\n      currentCharIndex: 0, // 타이핑 해야하는 단어의 글자 순서\r\n      currentWordType: [], // input 과 비교 / 일치하면 black, 틀리면 red\r\n      currentWordLen: 0, // 타이핑 해야하는 단어의 길이\r\n      currentInput: '', // 타이핑 입력 데이터\r\n      currentInputLen: 0,\r\n      tempArr: [],\r\n      tempArr2: [],\r\n      tempidx: 0,\r\n\r\n      randNum: 0,\r\n      divStyle: {\r\n        width: '200px',\r\n        height: '100px',\r\n        float: 'left'\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    currentInput(newValue, oldValue) {\r\n      this.currentInputLen = this.currentInput.length\r\n      if (newValue === ' ') {\r\n        this.currentInput = ''\r\n      }\r\n      if (newValue.length < oldValue.length) {\r\n        // 지우기가 실행되었으면\r\n        this.tempArr2[oldValue.length - 1] = 'color: black;'\r\n      } else if (this.currentInputLen > this.currentWordLen + 1) {\r\n        this.nextUpdate(this.tempidx)\r\n      } else {\r\n        if (this.currenCharIndex !== 0) {\r\n          // 주어진 문자열 글자와 입력된 문자 비교\r\n          for (let i = 0; i < this.currentInputLen; i++) {\r\n            this.compare(\r\n              this.currentWord[i],\r\n              this.currentInput[i],\r\n              this.currentWordIndex,\r\n              this.currentInputLen - 1\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  setup() {},\r\n  created() {},\r\n  mounted() {\r\n    for (let i = 0; i < 5; i++) {\r\n      this.randomNum(0, 8)\r\n      this.wordArr.push(this.wordData[this.randNum])\r\n    }\r\n    // this.$refs.type?.focus()\r\n    // 초기 현재 단어, 길이 초기화\r\n    this.currentWordLen = this.wordArr[0].length\r\n    for (let i = 0; i < this.currentWordLen; i++) {\r\n      this.currentWord[i] = this.wordArr[0][i]\r\n    }\r\n    for (let i = 0; i < 5; i++) {\r\n      this.wordLen[i] = this.wordArr[i].length\r\n      for (let j = 0; j < this.wordLen[i]; j++) {\r\n        this.tempArr[j] = 'color: black;'\r\n      }\r\n      this.currentWordType.push(this.tempArr)\r\n      this.tempArr = []\r\n    }\r\n  },\r\n  unmounted() {},\r\n  methods: {\r\n    nextUpdate(idx) {\r\n      // Enter 시 문자열 비교 함수 구현\r\n\r\n      // 현재 입력된 Input, Word 초기화\r\n      this.currentInput = ''\r\n      this.currentWord = []\r\n      this.currentWordIndex = idx + 1 // 비교해야하는 기준 문자열\r\n      this.currentCharIndex = 0 // 입력된 문자\r\n\r\n      // Enter 시 Input\r\n      this.canType[idx] = false\r\n      idx++\r\n\r\n      if (idx > 4) {\r\n        this.wordArr = []\r\n        idx = 0\r\n        this.makeWordArr()\r\n      } else {\r\n        this.currentWordLen = this.wordArr[idx].length\r\n        for (let i = 0; i < this.currentWordLen; i++) {\r\n          this.currentWord[i] = this.wordArr[idx][i]\r\n          this.tempArr[i] = 'color: black;'\r\n        }\r\n        this.currentWordType.push(this.tempArr)\r\n        this.tempArr = []\r\n      }\r\n\r\n      this.canType[idx] = true\r\n      this.tempidx = idx\r\n    },\r\n    makeWordArr() {\r\n      // 다시 색깔 바꾸어야 하니까 초기화\r\n      this.currentWordType = []\r\n\r\n      this.currentWordIndex = 0\r\n\r\n      // wordArr 초기화\r\n      for (let i = 0; i < 5; i++) {\r\n        this.randomNum(0, 8)\r\n        this.wordArr.push(this.wordData[this.randNum])\r\n      }\r\n      // 초기 현재 단어, 길이 초기화\r\n      this.currentWordLen = this.wordArr[0].length\r\n      for (let i = 0; i < this.currentWordLen; i++) {\r\n        this.currentWord[i] = this.wordArr[0][i]\r\n      }\r\n      // currentWordType 초기화\r\n      for (let i = 0; i < 5; i++) {\r\n        // wordLen 초기화\r\n        this.wordLen[i] = this.wordArr[i].length\r\n        for (let j = 0; j < this.wordLen[i]; j++) {\r\n          // i 번째 단어 char 색 초기화\r\n          this.tempArr[j] = 'color: black;'\r\n        }\r\n        this.currentWordType.push(this.tempArr)\r\n        this.tempArr = []\r\n      }\r\n      console.log(this.currentWordType[0])\r\n    },\r\n    randomNum(min, max) {\r\n      this.randNum = 0\r\n      this.randNum = Math.floor(Math.random() * (max - min + 1) + min)\r\n    },\r\n    compare(a, b, idx, idx2) {\r\n      console.log(a)\r\n      console.log(b)\r\n      console.log(idx)\r\n      console.log(idx2)\r\n      console.log(this.currentWordType[idx])\r\n      if (a === b) {\r\n        // 문자가 같으면 색 black\r\n        this.tempArr2 = this.currentWordType[idx]\r\n        this.tempArr2[idx2] = 'color: black;'\r\n      } else {\r\n        this.tempArr2 = this.currentWordType[idx]\r\n        this.tempArr2[idx2] = 'color: red;'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import { render } from \"./CView.vue?vue&type=template&id=fce07d56\"\nimport script from \"./CView.vue?vue&type=script&lang=js\"\nexport * from \"./CView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\gihwan\\\\vue\\\\cnu-first-project\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div><h1>코딩 타자 연습</h1></div>\r\n    <div :class=\"{ flex: true, centerItems: true }\">\r\n      <div :key=\"index\" v-for=\"(word, index) in RandSelectedWordArr\">\r\n        <div :class=\"{ columnDirectionItems: true }\">\r\n          <br />\r\n          <span\r\n            :key=\"index2\"\r\n            v-for=\"(char, index2) in word.value\"\r\n            :class=\"{ charColor: currentWordCharColor[index][index2] }\"\r\n          >\r\n            {{ char }}\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <input\r\n            @keydown.enter=\"index = gotoNextInput(index, word)\"\r\n            @keydown.delete=\"reducecharIdxInWord\"\r\n            @keydown=\"compareAndChangeColor($event, word, index)\"\r\n            type=\"text\"\r\n            v-focus\r\n            v-model=\"currentInput\"\r\n            :class=\"{ hideInput: hideBool[index] }\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nconst focus = {\r\n  // custom directive 만들어서, mounted 될 때랑 el 값이 update 될 때 포커스를 el에 맞추도록 했음.\r\n  // el 옵션은 Vue 인스턴스에 연결할 HTML DOM 요소를 지정\r\n  mounted: (el) => el.focus(),\r\n  updated: (el) => el.focus()\r\n}\r\nexport default {\r\n  name: 'CustomDirective',\r\n  // focus 라는 custom Directive 만들어서 v-focus로 쓰기.\r\n  directives: {\r\n    focus\r\n  },\r\n  components: {},\r\n  data() {\r\n    return {\r\n      numberToSelect: 5,\r\n      selectedWordIndex: 0,\r\n      RandSelectedWordArr: [],\r\n      hideBool: [],\r\n      wrongCharBool: [],\r\n      specialKeyCodes: [61, 186, 187, 188, 189, 190, 191, 192, 219, 220, 221, 222],\r\n      charIdxInWord: 0,\r\n\r\n      CwordArr: [\r\n        // C 언어에서 사용하는 단어들 배열\r\n        { value: 'ex1', originidx: 0 },\r\n        { value: 'ex2', originidx: 1 },\r\n        { value: 'ex3', originidx: 2 },\r\n        { value: 'ex4', originidx: 3 },\r\n        { value: 'ex5', originidx: 4 },\r\n        { value: 'ex6', originidx: 5 }\r\n      ],\r\n      currentWordCharColor: [], // input 과 비교 / 기본/일치 false(black), 틀리면 true(red)\r\n      currentInput: '',\r\n      currentWordIndex: 0,\r\n      tempArr: []\r\n    }\r\n  },\r\n  watch: {\r\n    currentInput(newValue, oldValue) {\r\n      if (newValue.length > this.RandSelectedWordArr[this.currentWordIndex].value.length) {\r\n        // 문자 길이 오버\r\n        this.gotoNextInput(this.currentWordIndex)\r\n      } else {\r\n        this.wordCompareFunction(newValue, oldValue)\r\n      }\r\n    }\r\n  },\r\n  setup() {},\r\n  async created() {\r\n    // console.log('startCreated')\r\n    this.CwordArr = await this.getWordArr('cfunctions')\r\n    // console.log('created done ', this.CwordArr)\r\n    this.RandSelectedWordArr = this.RandSelectFunction(this.CwordArr, this.numberToSelect)\r\n  },\r\n  mounted() {\r\n    // console.log('startMounted')\r\n    this.RandSelectedWordArr = this.RandSelectFunction(this.CwordArr, this.numberToSelect)\r\n    for (let i = 0; i < this.numberToSelect; i++) {\r\n      this.wrongCharBool.push([])\r\n      if (i === 0) {\r\n        this.hideBool[i] = false\r\n      } else {\r\n        this.hideBool[i] = true\r\n      }\r\n      this.setCurrentWordCharColor()\r\n    }\r\n  },\r\n  unmounted() {},\r\n  methods: {\r\n    async getWordArr(apiId) {\r\n      let arr = []\r\n      await this.axios\r\n        .get(`/api/${apiId}`)\r\n        .then((response) => {\r\n          arr = response.data\r\n          // console.log('getArr', arr)\r\n        })\r\n        .catch((error) => console.log(error))\r\n      // console.log('axios get done')\r\n      return arr\r\n    },\r\n    RandSelectFunction(arr, num) {\r\n      // console.log('Rand', arr)\r\n      // 단어들이 들어있는 배열을 넣으면 그 중에 num 개를 뽑아서 새로운 배열을 return 하는 함수\r\n      const shuffled = [...arr].sort(() => 0.5 - Math.random())\r\n      // sort 함수 참고, compare 함수 리턴값이 음수,양수가 랜덤하게 나오니\r\n      // 랜덤하게 arr가 정렬됨.\r\n      // ...은 전개 연산자로 넣지 않으면\r\n      const RandSelectedWordArr = shuffled.slice(0, num)\r\n      // 그렇게 랜덤하게 정렬된 배열을 num으로 지정한 길이만큼 잘라냄\r\n      return RandSelectedWordArr\r\n    },\r\n    gotoNextInput(index) {\r\n      this.currentInput = ''\r\n      this.visibleNextOf(index)\r\n      this.charIdxInWord = 0\r\n      // 해당 단어에 input으로 넣었던 값 초기화.\r\n      if (index + 1 === this.numberToSelect) {\r\n        // index가 끝에 다다르면 새로 RandSelect 함.\r\n        this.RandSelectedWordArr = this.RandSelectFunction(this.CwordArr, this.numberToSelect)\r\n        this.visibleNextOf(-1)\r\n        // console.log(index)\r\n        // index가 0인 input 칸이 보이도록 함\r\n\r\n        //각 글자별 색깔 bool 값 초기화\r\n        this.setCurrentWordCharColor()\r\n        this.currentWordIndex = 0\r\n        return 0\r\n      }\r\n      this.currentWordIndex = index + 1\r\n\r\n      return index + 1\r\n    },\r\n    visibleNextOf(index) {\r\n      this.hideBool[index] = true\r\n      this.hideBool[index + 1] = false\r\n    },\r\n    setCurrentWordCharColor() {\r\n      this.currentWordCharColor = []\r\n      this.tempArr = []\r\n      for (let i = 0; i < this.numberToSelect; i++) {\r\n        // 각 글자별 색깔 bool 값 초기화\r\n        for (let j = 0; j < this.RandSelectedWordArr[i].value.length; j++) {\r\n          this.tempArr[j] = false\r\n        }\r\n        this.tempArr = []\r\n        this.currentWordCharColor.push(this.tempArr)\r\n      }\r\n    },\r\n    wordCompareFunction(newValue, oldValue) {\r\n      var compareChar = this.currentInput[newValue.length - 1]\r\n      var compareChar2 = this.RandSelectedWordArr[this.currentWordIndex].value[newValue.length - 1]\r\n      // console.log(this.currentWordIndex)\r\n\r\n      if (compareChar === compareChar2) {\r\n        // 문자열 같으면 검은색 / 틀리면 빨간색\r\n        this.currentWordCharColor[this.currentWordIndex][newValue.length - 1] = false\r\n      } else {\r\n        this.currentWordCharColor[this.currentWordIndex][newValue.length - 1] = true\r\n      }\r\n      if (newValue.length < oldValue.length) {\r\n        //delete 시 이전값 검은색\r\n        this.currentWordCharColor[this.currentWordIndex][oldValue.length - 1] = false\r\n      }\r\n      // console.log(this.currentWordCharColor)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.flex {\r\n  display: flex;\r\n}\r\n.hideInput {\r\n  visibility: hidden;\r\n}\r\n.columnDirectionItems {\r\n  flex-direction: column;\r\n}\r\n.rowDirectionItems {\r\n  flex-direction: row;\r\n}\r\n.centerItems {\r\n  justify-content: center;\r\n}\r\n.charColor {\r\n  color: red;\r\n}\r\n</style>\r\n","import { render } from \"./CView2.vue?vue&type=template&id=b1db03ae&scoped=true\"\nimport script from \"./CView2.vue?vue&type=script&lang=js\"\nexport * from \"./CView2.vue?vue&type=script&lang=js\"\n\nimport \"./CView2.vue?vue&type=style&index=0&id=b1db03ae&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\gihwan\\\\vue\\\\cnu-first-project\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b1db03ae\"]])\n\nexport default __exports__","<template>\r\n  <div><br /><br />로그인 창<br /><br /></div>\r\n</template>\r\n<script>\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      sampleData: ''\r\n    }\r\n  },\r\n  setup() {},\r\n  created() {},\r\n  mounted() {},\r\n  methods: {}\r\n}\r\n</script>\r\n","import { render } from \"./LoginView.vue?vue&type=template&id=32dc344c\"\nimport script from \"./LoginView.vue?vue&type=script&lang=js\"\nexport * from \"./LoginView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\gihwan\\\\vue\\\\cnu-first-project\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","$data","word","index","style","key","char","index2","_toDisplayString","type","onKeydown","$options","$event","_hoisted_3","_ctx","focus","mounted","el","name","directives","components","data","wordData","wordArr","wordLen","canType","currentWord","currentWordIndex","currentCharIndex","currentWordType","currentWordLen","currentInput","currentInputLen","tempArr","tempArr2","tempidx","randNum","divStyle","width","height","float","watch","newValue","oldValue","this","length","nextUpdate","currenCharIndex","i","compare","setup","created","randomNum","push","j","unmounted","methods","idx","makeWordArr","console","log","min","max","Math","floor","random","a","b","idx2","__exports__","render","class","flex","centerItems","columnDirectionItems","_hoisted_4","value","charColor","_hoisted_5","_hoisted_6","hideInput","updated","numberToSelect","selectedWordIndex","RandSelectedWordArr","hideBool","wrongCharBool","specialKeyCodes","charIdxInWord","CwordArr","originidx","currentWordCharColor","gotoNextInput","wordCompareFunction","async","getWordArr","RandSelectFunction","setCurrentWordCharColor","apiId","arr","axios","get","then","response","catch","error","num","shuffled","sort","slice","visibleNextOf","compareChar","compareChar2","_hoisted_2","sampleData"],"sourceRoot":""}